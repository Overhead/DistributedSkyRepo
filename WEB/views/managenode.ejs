<script type="text/javascript">

var wSocket;

$( document ).ready(function() {
    var addr = document.getElementById('node_ip').innerHTML
      
   	wSocket = new WebSocket("ws://" + addr + "/docker");
   		
   	wSocket.onmessage = function (event) {
	  NodeResponse(event)
	};
	
	wSocket.onopen = function (event) {
		//ShowImages()
		ShowContainers()
	};
	
	wSocket.addEventListener("close", function(event) {
	  console.log("Closing websocket")
	});
	
});

function ShowContainers() {   
    var msg = {
    	Action: 7,
		Date: Date.now()
    }
    wSocket.send(JSON.stringify(msg));
}

function ShowImages() {
	var msg = {
    	Action: 10,
		Date: Date.now()
    }
    wSocket.send(JSON.stringify(msg));
}

function GetSkyRing() {
	var nodeaddr = $('#sky-node-addr');
	
	if(nodeaddr.val() == "") {
		alert("Please fill in a node address in order to get ring");
	} else {
		$.ajax({
		   url: "/manage/"+nodeaddr.val()+"/ring/",
		   type: "GET",
		   success: function(data) {
		     CreateSkyRingList(data)
		   }
		});
	}
}

function CreateCont() {
	console.log("Create")
	var contname = $('#container-name-field');
	var imgid = $('#image-id-field');
	var joinaddr = $('#node-join-addr');
	
	if(contname.val() == "" || imgid.val() == "" || joinaddr.val() == "") {
		alert("Fill in Name, ID and JoinAddress")
	} else {
		var msg = {
			Action: 1,
			ContainerName: contname.val(),
			ImageID: imgid.val(),
			Date: Date.now()
		}
		wSocket.send(JSON.stringify(msg));
		contname.val("");
		imgid.val("");
	}
}

function StartContainer(container_id) {
		var msg = {
			Action: 2,
			Container_ID: container_id,
			Date: Date.now()
		}
		wSocket.send(JSON.stringify(msg));
}

function StopContainer(container_id) {
		var msg = {
			Action: 3,
			Container_ID: container_id,
			Date: Date.now()
		}
		wSocket.send(JSON.stringify(msg));
}

function KillContainer(container_id) {
		var msg = {
			Action: 4,
			Container_ID: container_id,
			Date: Date.now()
		}
		wSocket.send(JSON.stringify(msg));
}

function DeleteContainer(container_id) {
		var msg = {
			Action: 6,
			Container_ID: container_id,
			Date: Date.now()
		}
		wSocket.send(JSON.stringify(msg));
}

function ConnectNodeToRing(container_id){
		var joinaddr = $('#node-join-addr').val()
		
		var msg = {
			Action: 11,
			Container_ID: container_id,
			JoinAddr: joinaddr,
			Date: Date.now()
		}
		wSocket.send(JSON.stringify(msg));
}

/*function GetSkyRing() { //Future working solution
	var nodeaddr = $('#sky-node-addr');
	
	if(nodeaddr.val() == "") {
		alert("Please fill in a node address in order to get ring");
	} else {
		var nodeSocket = new WebSocket("ws://" + nodeaddr.val() + "/node");
	   		
	   	nodeSocket.onmessage = function (event) {
		  CreateSkyRingList(event)
		};
		
		nodeSocket.onopen = function (event) {
			var msg = {
				Action: 3,
			}
			nodeSocket.send(JSON.stringify(msg));
		};
		
		nodeSocket.addEventListener("close", function(event) {
		  console.log("Closing node-websocket")
		});
		
		nodeSocket.onerror = function(event) {
			alert("Error on node-websocket: ")
		}
	}
	
}*/

</script>

<html>
    <body>
		 <p id="node_ip" class="hidden"><%= node_addr %></p>
		 <h3 id="sky-ring-title">Nodes in Sky-ring: 0</h3>
		 <div class="input-group">
		  <input id="sky-node-addr" type="text" class="form-control" placeholder="Sky-node IP:PORT">
		 </div>
		 <button type="button" class="btn btn-info" data-toggle="collapse" data-target="#sky-ring-div"> Toggle table</button>
		 <button class="btn btn-primary" type="button" onclick="GetSkyRing()">
			Get ring <span class="glyphicon glyphicon-refresh"></span>
		 </button>
		 <div id="sky-ring-div" class="collapse">
			 <table class="table table-striped table-condensed" id="sky-ring-table">
				<thead>
					<tr>
						<th>#</th>
						<th>ID</th>
						<th>IP</th>
					</tr>
				</thead>
				<tbody id="sky-ring-body">
					<td id="no-ring-text" colspan="3" style="text-align: center"class="alert alert-warning" role="alert">No ring</td>
				</tbody>
			 </table>
		 </div>
		 </br>
		 </br>
		 <div class="input-group">
		  <input id="node-join-addr" type="text" class="form-control" placeholder="Node to join -> IP:PORT">
		  <input id="container-name-field" type="text" class="form-control" placeholder="Container name">
		  <input id="image-id-field" type="text" class="form-control" placeholder="Image ID">
		</div>
		 <button class="btn btn-primary" type="button" onclick="CreateCont()">
			Create new node
		 </button>
		 </br>
		
    	 <h3 id="avail_cont_head"> Containers available: 0 </h3>
		 <button type="button" class="btn btn-info" data-toggle="collapse" data-target="#containers_div"> Toggle table</button>
		 <button class="btn btn-primary" type="button" onclick="ShowContainers()">
			Refresh <span class="glyphicon glyphicon-refresh"></span>
		 </button>
		 <div id="containers_div" class="collapse">
			 <table class="table table-striped table-condensed" id="container_table">
				<thead>
					<tr>
						<th>#</th>
						<th>ID</th>
						<th>Image</th>
						<th>Created</th>
						<th>Status</th>
						<th></th>
					</tr>
				</thead>
				<tbody id="containers_body">
				</tbody>
			 </table>
		 </div>
	</body>
</html>